// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_test_bot.DbTools;

#nullable disable

namespace Web_test_bot.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250317203436_Ravigatemplate_25")]
    partial class Ravigatemplate_25
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("MyChatMyUser", b =>
                {
                    b.Property<int>("ChatUsersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserGroupListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChatUsersId", "UserGroupListId");

                    b.HasIndex("UserGroupListId");

                    b.ToTable("MyChatMyUser");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CurentMenuId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CurentMessageIdForMenu")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurentTextModel")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsBan")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsDelite")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsGroupChat")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastMessageDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LastUpdateId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PriviousIncummingMessageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProcessCode")
                        .HasColumnType("TEXT");

                    b.Property<long>("TeleChatId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TeleChatMembersCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeleChatTitle")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TeleChatType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeleChatUserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurentMenuId");

                    b.HasIndex("PriviousIncummingMessageId")
                        .IsUnique();

                    b.ToTable("MyChats");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyDefoltUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsDelite")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("TelegramId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TelegramUserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserTypeСode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeСode");

                    b.ToTable("MyDefoltUsers");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("InputContent")
                        .HasColumnType("TEXT");

                    b.Property<string>("InputDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("InputName")
                        .HasColumnType("TEXT");

                    b.Property<string>("InputType")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsDelite")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MenuId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NextMenuCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("NextMenuCode");

                    b.ToTable("MyInput");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyInputType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsDelite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MyIntupTypes");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyMenuContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsDelite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MenuCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MenuName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MenuTypeCode")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("NeedToDelete")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProcessID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProcessID");

                    b.HasIndex("TypeId");

                    b.ToTable("MyMenus");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyMenuType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsDelite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MyMenuTypes");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsDelite")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsIncomingMessage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MessageContent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("MessageDate")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("NeedToDelite")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TeleChatId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TeleMessageId")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("isComand")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeleChatId");

                    b.ToTable("MyMessage");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsDelite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProcessName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserAccessCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserAccessCode")
                        .IsUnique();

                    b.ToTable("MyProcesses");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyUpdate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChatTitle")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ChatType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Command")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsCommand")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsDelite")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsInccoming")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsTextMessage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MessageText")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TeleDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TeleUpdateId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("MyUpdates");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("CanJoinGroups")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("CanReadAllGroupMessages")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsBan")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsDelite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeleFirstName")
                        .HasColumnType("TEXT");

                    b.Property<long?>("TeleId")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("TeleIsBot")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeleLanguageCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("TeleLasttName")
                        .HasColumnType("TEXT");

                    b.Property<string>("TeleUserName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("usertypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("usertypeId");

                    b.ToTable("MyUsers");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyUserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsDefoult")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsDelite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeDiscr")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("myUserTypes");
                });

            modelBuilder.Entity("MyChatMyUser", b =>
                {
                    b.HasOne("Web_test_bot.DbTools.DbObjeckts.MyUser", null)
                        .WithMany()
                        .HasForeignKey("ChatUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_test_bot.DbTools.DbObjeckts.MyChat", null)
                        .WithMany()
                        .HasForeignKey("UserGroupListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyChat", b =>
                {
                    b.HasOne("Web_test_bot.DbTools.DbObjeckts.MyMenuContent", "CurentMenu")
                        .WithMany("ChatsInThisMenu")
                        .HasForeignKey("CurentMenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Web_test_bot.DbTools.DbObjeckts.MyMessage", "PriviousIncummingMessage")
                        .WithOne("PriviousIncummingMessageChat")
                        .HasForeignKey("Web_test_bot.DbTools.DbObjeckts.MyChat", "PriviousIncummingMessageId");

                    b.Navigation("CurentMenu");

                    b.Navigation("PriviousIncummingMessage");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyDefoltUser", b =>
                {
                    b.HasOne("Web_test_bot.DbTools.DbObjeckts.MyUserType", "UserType")
                        .WithMany("DefoltUsers")
                        .HasForeignKey("UserTypeСode")
                        .HasPrincipalKey("TypeCode");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyInput", b =>
                {
                    b.HasOne("Web_test_bot.DbTools.DbObjeckts.MyMenuContent", "Menu")
                        .WithMany("Inputs")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Web_test_bot.DbTools.DbObjeckts.MyMenuContent", "NextMenu")
                        .WithMany("CallingInputs")
                        .HasForeignKey("NextMenuCode")
                        .HasPrincipalKey("MenuCode")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Menu");

                    b.Navigation("NextMenu");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyMenuContent", b =>
                {
                    b.HasOne("Web_test_bot.DbTools.DbObjeckts.MyProcess", "Process")
                        .WithMany("Content")
                        .HasForeignKey("ProcessID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Web_test_bot.DbTools.DbObjeckts.MyMenuType", "Type")
                        .WithMany("Menus")
                        .HasForeignKey("TypeId");

                    b.Navigation("Process");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyMessage", b =>
                {
                    b.HasOne("Web_test_bot.DbTools.DbObjeckts.MyChat", "ParentChat")
                        .WithMany("ChatMessages")
                        .HasForeignKey("TeleChatId")
                        .HasPrincipalKey("TeleChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentChat");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyProcess", b =>
                {
                    b.HasOne("Web_test_bot.DbTools.DbObjeckts.MyUserType", "UserAccess")
                        .WithOne("Process")
                        .HasForeignKey("Web_test_bot.DbTools.DbObjeckts.MyProcess", "UserAccessCode")
                        .HasPrincipalKey("Web_test_bot.DbTools.DbObjeckts.MyUserType", "TypeCode");

                    b.Navigation("UserAccess");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyUpdate", b =>
                {
                    b.HasOne("Web_test_bot.DbTools.DbObjeckts.MyChat", "ParentChat")
                        .WithMany("ChatUpdates")
                        .HasForeignKey("ChatId")
                        .HasPrincipalKey("TeleChatId");

                    b.Navigation("ParentChat");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyUser", b =>
                {
                    b.HasOne("Web_test_bot.DbTools.DbObjeckts.MyUserType", "UserType")
                        .WithMany("UserList")
                        .HasForeignKey("usertypeId");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyChat", b =>
                {
                    b.Navigation("ChatMessages");

                    b.Navigation("ChatUpdates");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyMenuContent", b =>
                {
                    b.Navigation("CallingInputs");

                    b.Navigation("ChatsInThisMenu");

                    b.Navigation("Inputs");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyMenuType", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyMessage", b =>
                {
                    b.Navigation("PriviousIncummingMessageChat");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyProcess", b =>
                {
                    b.Navigation("Content");
                });

            modelBuilder.Entity("Web_test_bot.DbTools.DbObjeckts.MyUserType", b =>
                {
                    b.Navigation("DefoltUsers");

                    b.Navigation("Process");

                    b.Navigation("UserList");
                });
#pragma warning restore 612, 618
        }
    }
}
